{"version":3,"file":"index.modern.js","sources":["../src/logic/isEmpty.ts","../src/logic/isArray.ts","../src/builtIn/builtIns.ts","../src/logic/checkValidators.ts","../src/logic/hasNameAttribute.ts","../src/logic/isRadio.ts","../src/logic/isCheckbox.ts","../src/logic/getValue.ts","../src/logic/isEmptyValue.ts","../src/logic/getHierarchyProperties.ts","../src/logic/throwWarning.ts","../src/logic/hasKey.ts","../src/index.ts"],"sourcesContent":["export const isEmpty = (o: object): boolean => {\n  if (Array.isArray(o)) {\n    return !o.length\n  }\n  return Object.keys(o).length === 0 && o.constructor === Object\n}\n","export const isArray = (a: any) => Array.isArray(a)\n","import { isEmpty } from '../logic/isEmpty'\nimport { isArray } from '../logic/isArray'\n\nexport default {\n  required: <T>(value: T): boolean => {\n    if (typeof value === 'string') {\n      return (value as string).trim().length > 0\n    }\n    if (typeof value === 'number') {\n      return !!value\n    }\n    if (\n      value &&\n      typeof value === 'object' &&\n      !isEmpty((value as unknown) as object)\n    ) {\n      return true\n    }\n    return false\n  },\n  email: (input: string): boolean =>\n    /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(input),\n  minLength: (input: string, len: number): boolean => {\n    if (!len) {\n      console.warn('length is not provided')\n    }\n    return input.toString().length >= len\n  },\n  maxLength: (input: string, len: number): boolean => {\n    if (!len) {\n      console.warn('length is not provided')\n    }\n    return input.toString().length <= len\n  },\n  minCheckboxes: (input: any, availableOptions: any = null) => {\n    if (\n      typeof input === 'object' &&\n      isArray(input) &&\n      availableOptions &&\n      typeof availableOptions === 'number'\n    ) {\n      return (input as []).length >= availableOptions\n    }\n    return false\n  }\n}\n","import { Config } from '../types/configuration'\nimport { Rules } from '../types/fields'\n\nconst checkForValidators = (\n  configValidators: Config | null,\n  builtInValidators: any,\n  name: string,\n  rules?: Rules\n) => {\n  if (rules?.customValidators?.[name]) {\n    return rules.customValidators[name]\n  }\n  if (configValidators?.[name]) {\n    return configValidators[name]\n  }\n  if (builtInValidators[name]) {\n    return builtInValidators[name]\n  } else {\n    console.warn(`no validation function with mane ${name}`)\n  }\n}\n\nexport const getValidators = (\n  configValidators: Config | null,\n  builtInValidators: object,\n  rules?: Rules\n) => {\n  if (!rules) return\n  const f = {}\n  for (const key in rules?.rules) {\n    const t = checkForValidators(\n      configValidators,\n      builtInValidators,\n      key,\n      rules\n    )\n    if (t) {\n      f[key] = t\n    }\n  }\n  return f\n}\n","import { Basic } from '../types/fields'\n\nexport const hasNameAttribute = (ref: Basic) => {\n  const name = ref.name\n  if (name) {\n    return name\n  } else {\n    console.warn(\n      `the field @ ${ref.outerHTML} must have a unique name attribute`\n    )\n    return undefined\n  }\n}\n","import { Basic } from '../types/fields'\n\nexport const isRadio = (ref: Basic) => ref.type === 'radio'\n","import { Basic } from '../types/fields'\n\nexport const isCheckbox = (ref: Basic) => ref.type === 'checkbox'\n","import { isArray } from './isArray'\nimport { DataField } from '../types/fields'\nimport { isEmpty } from './isEmpty'\n\nexport const getValue = (v: DataField): [] | any | null => {\n  if (v.type === 'checkbox' || v.type === 'radio') {\n    if (!v.ref) {\n      if (!isEmpty(v.group!) && isArray(v.group)) {\n        return (v.group as React.MutableRefObject<HTMLInputElement>[])\n          .filter((e) => e.current.checked)\n          .map((e) => e.current.value)\n      }\n    } else {\n      if (\n        v.ref.current &&\n        (v.ref as React.MutableRefObject<HTMLInputElement>).current.checked\n      ) {\n        return v.ref.current.value\n      } else {\n        return null\n      }\n    }\n  }\n\n  if (v.ref.current) {\n    return v.ref.current.value\n  }\n\n  return null\n}\n","import { isEmpty } from './isEmpty'\n\nexport const isEmptyValue = <T>(v: T): boolean => {\n  if (typeof v === 'object' && v !== null) {\n    return isEmpty((v as unknown) as object)\n  }\n  if (typeof v === 'number') {\n    return !(v || v === 0)\n  }\n  if (typeof v === 'string') {\n    return !v.trim()\n  }\n  if (v) {\n    return false\n  }\n  return true\n}\n","export const getHierarchyProperties = (\n  inputOptions: any = null,\n  globalOptions: any = null,\n  key: string\n) => inputOptions?.[key] || globalOptions?.[key] || undefined\n","export const throwWarning = <T>(value: T) => (warning: string): T => {\n  if (!value) console.warn(warning)\n  return value\n}\n","export const hasKey = (obj: object, key: string): boolean => {\n  return obj && key in obj\n}\n","import { useRef, useState, createRef, RefObject, useEffect } from 'react'\nimport builtInValidators from './builtIn/builtIns'\nimport { Config, UseValidator } from './types/configuration'\nimport { DataField, Rules, Basic } from './types/fields'\nimport { getValidators } from './logic/checkValidators'\nimport { hasNameAttribute } from './logic/hasNameAttribute'\nimport { isRadio } from './logic/isRadio'\nimport { isEmpty } from './logic/isEmpty'\nimport { isCheckbox } from './logic/isCheckbox'\nimport { getValue } from './logic/getValue'\nimport { isEmptyValue } from './logic/isEmptyValue'\nimport { getHierarchyProperties } from './logic/getHierarchyProperties'\nimport { throwWarning } from './logic/throwWarning'\nimport { hasKey } from './logic/hasKey'\n\nexport const useValidator = (config?: Config): UseValidator => {\n  const elements = useRef<Map<string, DataField>>(new Map())\n  const touchedElements = useRef(new Map())\n  const dirtyElements = useRef(new Map())\n  const errors = useRef({})\n  const triedToSubmit = useRef(false)\n  const formValidity = useRef(true)\n  const shouldRerender = useRef(false)\n  const [, rerender] = useState()\n\n  const submitForm = (fn?: Function) => (e: Event) => {\n    e.preventDefault()\n    const prevFormValidity = formValidity.current\n    if (elements.current.size !== dirtyElements.current.size) {\n      dirtyElements.current = new Map(elements.current)\n    }\n    elements.current.forEach((value: DataField) => {\n      fieldValidation(value)\n    })\n    triedToSubmit.current = true\n\n    if (formValidity.current !== prevFormValidity) {\n      rerender({})\n      return\n    }\n    fn && fn()\n  }\n\n  useEffect(() => {\n    elements.current.forEach((value: DataField) => {\n      const val = getValue(value)\n      if (isEmptyValue(val)) return\n      fieldValidation(value)\n    })\n  }, [])\n\n  const fieldValidation = (elem: DataField): void => {\n    let _isValid = true\n    const previousErrorState = { ...errors.current }\n    const { fieldRules, validators, name } =\n      elements.current.get(elem.name!) || {}\n    const { rules, messages, options } = fieldRules || {}\n\n    if (rules && name) {\n      for (const key in validators) {\n        const validator = validators[key]\n        const availableOptions = getHierarchyProperties(\n          options,\n          config?.globalOptions,\n          key\n        )\n        const value = getValue(elem)\n        if (rules[key] && !validator(value, availableOptions)) {\n          _isValid = false\n          if (hasKey(errors.current?.[name], key)) continue\n          shouldRerender.current = true\n          // TODO: when message is missing rerenders multiple times\n          const errorMsg = throwWarning(\n            getHierarchyProperties(messages, config?.globalMessages, key)\n          )(`no @ ${key} error message anywhere for ${name} input.`)\n          // TODO: with below code is not working properly.\n          // if (!errorMsg) return\n\n          errors.current[name] = errors.current[name] || {}\n          errors.current[name][key] = errorMsg\n          elements.current.set(name, {\n            ...(elements.current.get(name) as DataField),\n            valid: false\n          })\n        } else {\n          if (!errors.current?.[name]?.[key]) continue\n          shouldRerender.current = true\n          delete errors.current?.[name]?.[key]\n          if (!isEmpty(errors?.current) && isEmpty(errors?.current?.[name])) {\n            isEmpty(errors.current?.[name]) && delete errors.current?.[name]\n            errors.current = { ...errors.current }\n            elements.current.set(name, {\n              ...(elements.current.get(name) as DataField),\n              valid: true\n            })\n          }\n        }\n      }\n    }\n    if (!_isValid) {\n      formValidity.current = false\n    }\n\n    if (isEmpty(errors.current) && !isEmpty(previousErrorState)) {\n      shouldRerender.current = true\n      formValidity.current = true\n    }\n\n    if (shouldRerender.current) {\n      shouldRerender.current = false\n      rerender({})\n    }\n  }\n\n  const detectInput = (ref: RefObject<Basic>) => (e: Event) => {\n    e.stopPropagation()\n    const name = ref.current?.name\n    if (!dirtyElements.current.has(ref.current)) {\n      dirtyElements.current.set(ref.current, null)\n    }\n    if (!triedToSubmit.current && config?.validateFormOnSubmit) return\n    const t = elements.current.get(name!)\n    fieldValidation(t!)\n  }\n\n  const detectChange = (ref: RefObject<Basic>) => (e: Event) => {\n    e.stopPropagation()\n    if (!triedToSubmit.current && config?.validateFormOnSubmit) return\n    const name = ref.current?.name\n    const t = ref.current && elements.current.get(name!)\n    fieldValidation(t!)\n  }\n\n  const track = (elem: Basic, rules?: Rules): void => {\n    if (!elem) return\n\n    const ref = createRef<Basic>()\n    ;(ref as React.MutableRefObject<Basic>).current = elem\n    const name = hasNameAttribute(ref.current!)\n    if (!name) return\n    const isRadioOrCheckbox = isRadio(ref.current!) || isCheckbox(ref.current!)\n    const e = elements.current.get(name)\n    // TODO: this needs refactoring yesterday\n    if (\n      !elements.current.has(name) ||\n      !(e?.group && e.group.some((elem) => elem.current === ref.current))\n    ) {\n      if (\n        isRadio(ref.current!) ||\n        isCheckbox(ref.current!) ||\n        ref.current?.type === 'range'\n      ) {\n        ref.current && ref.current.addEventListener('change', detectChange(ref))\n      } else {\n        ref.current && ref.current.addEventListener('focus', detectTouch(ref))\n        ref.current && ref.current.addEventListener('input', detectInput(ref))\n      }\n    }\n\n    const validators = getValidators(\n      config?.customValidators,\n      builtInValidators,\n      rules\n    )\n\n    const dataFields: DataField = elements.current.get(name) || {\n      valid: true,\n      ...(rules && { fieldRules: rules }),\n      ...(validators && { validators }),\n      type: ref.current?.type,\n      name: name,\n      ...(isRadioOrCheckbox && { checked: false }),\n      ...(isRadioOrCheckbox && { group: [] }),\n      ref\n    }\n    if (elements.current.has(name)) {\n      if (dataFields.ref && dataFields.group) {\n        dataFields.group.push(dataFields.ref)\n      }\n      if (\n        dataFields.group &&\n        // TODO: refactor this\n        !dataFields.group.some((elem) => elem.current === ref.current)\n      ) {\n        dataFields.group.push(ref)\n        delete dataFields.ref\n      }\n    }\n    elements.current.set(name, dataFields)\n  }\n\n  const detectTouch = (ref: RefObject<Basic>) => () => {\n    touchedElements.current.set(ref.current?.name, null)\n    ref.current &&\n      ref.current.removeEventListener('focus', detectTouch(ref), true)\n  }\n\n  return {\n    track: track,\n    submitForm: submitForm,\n    errors: errors.current,\n    formValidity: formValidity.current\n  }\n}\n"],"names":["isEmpty","o","Array","isArray","length","Object","keys","constructor","a","required","value","trim","email","input","test","minLength","len","console","warn","toString","maxLength","minCheckboxes","availableOptions","checkForValidators","configValidators","builtInValidators","name","rules","customValidators","getValidators","f","key","t","hasNameAttribute","ref","outerHTML","undefined","isRadio","type","isCheckbox","getValue","v","group","filter","e","current","checked","map","isEmptyValue","getHierarchyProperties","inputOptions","globalOptions","throwWarning","warning","hasKey","obj","useValidator","config","elements","useRef","Map","touchedElements","dirtyElements","errors","triedToSubmit","formValidity","shouldRerender","rerender","useState","submitForm","fn","preventDefault","prevFormValidity","size","forEach","fieldValidation","useEffect","val","elem","_isValid","previousErrorState","fieldRules","validators","get","messages","options","validator","errorMsg","globalMessages","set","valid","detectInput","stopPropagation","has","validateFormOnSubmit","detectChange","track","createRef","isRadioOrCheckbox","some","addEventListener","detectTouch","dataFields","push","removeEventListener"],"mappings":";;AAAO,MAAMA,OAAO,GAAIC,CAAD;AACrB,MAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AACpB,WAAO,CAACA,CAAC,CAACG,MAAV;AACD;;AACD,SAAOC,MAAM,CAACC,IAAP,CAAYL,CAAZ,EAAeG,MAAf,KAA0B,CAA1B,IAA+BH,CAAC,CAACM,WAAF,KAAkBF,MAAxD;AACD,CALM;;ACAA,MAAMF,OAAO,GAAIK,CAAD,IAAYN,KAAK,CAACC,OAAN,CAAcK,CAAd,CAA5B;;ACGP,wBAAe;AACbC,EAAAA,QAAQ,EAAMC,KAAJ;AACR,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAQA,KAAgB,CAACC,IAAjB,GAAwBP,MAAxB,GAAiC,CAAzC;AACD;;AACD,QAAI,OAAOM,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAO,CAAC,CAACA,KAAT;AACD;;AACD,QACEA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEA,CAACV,OAAO,CAAEU,KAAF,CAHV,EAIE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAhBY;AAiBbE,EAAAA,KAAK,EAAGC,KAAD,IACL,4CAA4CC,IAA5C,CAAiDD,KAAjD,CAlBW;AAmBbE,EAAAA,SAAS,EAAE,CAACF,KAAD,EAAgBG,GAAhB;AACT,QAAI,CAACA,GAAL,EAAU;AACRC,MAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACD;;AACD,WAAOL,KAAK,CAACM,QAAN,GAAiBf,MAAjB,IAA2BY,GAAlC;AACD,GAxBY;AAyBbI,EAAAA,SAAS,EAAE,CAACP,KAAD,EAAgBG,GAAhB;AACT,QAAI,CAACA,GAAL,EAAU;AACRC,MAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACD;;AACD,WAAOL,KAAK,CAACM,QAAN,GAAiBf,MAAjB,IAA2BY,GAAlC;AACD,GA9BY;AA+BbK,EAAAA,aAAa,EAAE,CAACR,KAAD,EAAaS,mBAAwB,IAArC;AACb,QACE,OAAOT,KAAP,KAAiB,QAAjB,IACAV,OAAO,CAACU,KAAD,CADP,IAEAS,gBAFA,IAGA,OAAOA,gBAAP,KAA4B,QAJ9B,EAKE;AACA,aAAQT,KAAY,CAACT,MAAb,IAAuBkB,gBAA/B;AACD;;AACD,WAAO,KAAP;AACD;AAzCY,CAAf;;ACAA,MAAMC,kBAAkB,GAAG,CACzBC,gBADyB,EAEzBC,iBAFyB,EAGzBC,IAHyB,EAIzBC,KAJyB;;;AAMzB,MAAIA,KAAJ,aAAIA,KAAJ,gDAAIA,KAAK,CAAEC,gBAAX,0DAAI,sBAA0BF,IAA1B,CAAJ,EAAqC;AACnC,WAAOC,KAAK,CAACC,gBAAN,CAAuBF,IAAvB,CAAP;AACD;;AACD,MAAIF,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAGE,IAAH,CAApB,EAA8B;AAC5B,WAAOF,gBAAgB,CAACE,IAAD,CAAvB;AACD;;AACD,MAAID,iBAAiB,CAACC,IAAD,CAArB,EAA6B;AAC3B,WAAOD,iBAAiB,CAACC,IAAD,CAAxB;AACD,GAFD,MAEO;AACLT,IAAAA,OAAO,CAACC,IAAR,qCAAiDQ,MAAjD;AACD;AACF,CAjBD;;AAmBA,AAAO,MAAMG,aAAa,GAAG,CAC3BL,gBAD2B,EAE3BC,iBAF2B,EAG3BE,KAH2B;AAK3B,MAAI,CAACA,KAAL,EAAY;AACZ,QAAMG,CAAC,GAAG,EAAV;;AACA,OAAK,MAAMC,GAAX,IAAkBJ,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEA,KAAzB,EAAgC;AAC9B,UAAMK,CAAC,GAAGT,kBAAkB,CAC1BC,gBAD0B,EAE1BC,iBAF0B,EAG1BM,GAH0B,EAI1BJ,KAJ0B,CAA5B;;AAMA,QAAIK,CAAJ,EAAO;AACLF,MAAAA,CAAC,CAACC,GAAD,CAAD,GAASC,CAAT;AACD;AACF;;AACD,SAAOF,CAAP;AACD,CAnBM;;ACpBA,MAAMG,gBAAgB,GAAIC,GAAD;AAC9B,QAAMR,IAAI,GAAGQ,GAAG,CAACR,IAAjB;;AACA,MAAIA,IAAJ,EAAU;AACR,WAAOA,IAAP;AACD,GAFD,MAEO;AACLT,IAAAA,OAAO,CAACC,IAAR,gBACiBgB,GAAG,CAACC,6CADrB;AAGA,WAAOC,SAAP;AACD;AACF,CAVM;;ACAA,MAAMC,OAAO,GAAIH,GAAD,IAAgBA,GAAG,CAACI,IAAJ,KAAa,OAA7C;;ACAA,MAAMC,UAAU,GAAIL,GAAD,IAAgBA,GAAG,CAACI,IAAJ,KAAa,UAAhD;;ACEA,MAAME,QAAQ,GAAIC,CAAD;AACtB,MAAIA,CAAC,CAACH,IAAF,KAAW,UAAX,IAAyBG,CAAC,CAACH,IAAF,KAAW,OAAxC,EAAiD;AAC/C,QAAI,CAACG,CAAC,CAACP,GAAP,EAAY;AACV,UAAI,CAAClC,OAAO,CAACyC,CAAC,CAACC,KAAH,CAAR,IAAsBvC,OAAO,CAACsC,CAAC,CAACC,KAAH,CAAjC,EAA4C;AAC1C,eAAQD,CAAC,CAACC,KAAF,CACLC,MADK,CACGC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAUC,OADnB,EAELC,GAFK,CAEAH,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAUnC,KAFhB,CAAR;AAGD;AACF,KAND,MAMO;AACL,UACE+B,CAAC,CAACP,GAAF,CAAMW,OAAN,IACCJ,CAAC,CAACP,GAAF,CAAmDW,OAAnD,CAA2DC,OAF9D,EAGE;AACA,eAAOL,CAAC,CAACP,GAAF,CAAMW,OAAN,CAAcnC,KAArB;AACD,OALD,MAKO;AACL,eAAO,IAAP;AACD;AACF;AACF;;AAED,MAAI+B,CAAC,CAACP,GAAF,CAAMW,OAAV,EAAmB;AACjB,WAAOJ,CAAC,CAACP,GAAF,CAAMW,OAAN,CAAcnC,KAArB;AACD;;AAED,SAAO,IAAP;AACD,CAzBM;;ACFA,MAAMsC,YAAY,GAAOP,CAAJ;AAC1B,MAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAAnC,EAAyC;AACvC,WAAOzC,OAAO,CAAEyC,CAAF,CAAd;AACD;;AACD,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,WAAO,EAAEA,CAAC,IAAIA,CAAC,KAAK,CAAb,CAAP;AACD;;AACD,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,WAAO,CAACA,CAAC,CAAC9B,IAAF,EAAR;AACD;;AACD,MAAI8B,CAAJ,EAAO;AACL,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAdM;;ACFA,MAAMQ,sBAAsB,GAAG,CACpCC,eAAoB,IADgB,EAEpCC,gBAAqB,IAFe,EAGpCpB,GAHoC,KAIjC,CAAAmB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGnB,GAAH,CAAZ,MAAuBoB,aAAvB,aAAuBA,aAAvB,uBAAuBA,aAAa,CAAGpB,GAAH,CAApC,KAA+CK,SAJ7C;;ACAA,MAAMgB,YAAY,GAAO1C,KAAJ,IAAkB2C,OAAD;AAC3C,MAAI,CAAC3C,KAAL,EAAYO,OAAO,CAACC,IAAR,CAAamC,OAAb;AACZ,SAAO3C,KAAP;AACD,CAHM;;ACAA,MAAM4C,MAAM,GAAG,CAACC,GAAD,EAAcxB,GAAd;AACpB,SAAOwB,GAAG,IAAIxB,GAAG,IAAIwB,GAArB;AACD,CAFM;;MCeMC,YAAY,GAAIC,MAAD;AAC1B,QAAMC,QAAQ,GAAGC,MAAM,CAAyB,IAAIC,GAAJ,EAAzB,CAAvB;AACA,QAAMC,eAAe,GAAGF,MAAM,CAAC,IAAIC,GAAJ,EAAD,CAA9B;AACA,QAAME,aAAa,GAAGH,MAAM,CAAC,IAAIC,GAAJ,EAAD,CAA5B;AACA,QAAMG,MAAM,GAAGJ,MAAM,CAAC,EAAD,CAArB;AACA,QAAMK,aAAa,GAAGL,MAAM,CAAC,KAAD,CAA5B;AACA,QAAMM,YAAY,GAAGN,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMO,cAAc,GAAGP,MAAM,CAAC,KAAD,CAA7B;AACA,QAAM,GAAGQ,QAAH,IAAeC,QAAQ,EAA7B;;AAEA,QAAMC,UAAU,GAAIC,EAAD,IAAoB1B,CAAD;AACpCA,IAAAA,CAAC,CAAC2B,cAAF;AACA,UAAMC,gBAAgB,GAAGP,YAAY,CAACpB,OAAtC;;AACA,QAAIa,QAAQ,CAACb,OAAT,CAAiB4B,IAAjB,KAA0BX,aAAa,CAACjB,OAAd,CAAsB4B,IAApD,EAA0D;AACxDX,MAAAA,aAAa,CAACjB,OAAd,GAAwB,IAAIe,GAAJ,CAAQF,QAAQ,CAACb,OAAjB,CAAxB;AACD;;AACDa,IAAAA,QAAQ,CAACb,OAAT,CAAiB6B,OAAjB,CAA0BhE,KAAD;AACvBiE,MAAAA,eAAe,CAACjE,KAAD,CAAf;AACD,KAFD;AAGAsD,IAAAA,aAAa,CAACnB,OAAd,GAAwB,IAAxB;;AAEA,QAAIoB,YAAY,CAACpB,OAAb,KAAyB2B,gBAA7B,EAA+C;AAC7CL,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA;AACD;;AACDG,IAAAA,EAAE,IAAIA,EAAE,EAAR;AACD,GAhBD;;AAkBAM,EAAAA,SAAS,CAAC;AACRlB,IAAAA,QAAQ,CAACb,OAAT,CAAiB6B,OAAjB,CAA0BhE,KAAD;AACvB,YAAMmE,GAAG,GAAGrC,QAAQ,CAAC9B,KAAD,CAApB;AACA,UAAIsC,YAAY,CAAC6B,GAAD,CAAhB,EAAuB;AACvBF,MAAAA,eAAe,CAACjE,KAAD,CAAf;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMiE,eAAe,GAAIG,IAAD;AACtB,QAAIC,QAAQ,GAAG,IAAf;AACA,UAAMC,kBAAkB,GAAG,EAAE,GAAGjB,MAAM,CAAClB;AAAZ,KAA3B;AACA,UAAM;AAAEoC,MAAAA,UAAF;AAAcC,MAAAA,UAAd;AAA0BxD,MAAAA;AAA1B,QACJgC,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBL,IAAI,CAACpD,IAA1B,KAAoC,EADtC;AAEA,UAAM;AAAEC,MAAAA,KAAF;AAASyD,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA+BJ,UAAU,IAAI,EAAnD;;AAEA,QAAItD,KAAK,IAAID,IAAb,EAAmB;AACjB,WAAK,MAAMK,GAAX,IAAkBmD,UAAlB,EAA8B;AAC5B,cAAMI,SAAS,GAAGJ,UAAU,CAACnD,GAAD,CAA5B;AACA,cAAMT,gBAAgB,GAAG2B,sBAAsB,CAC7CoC,OAD6C,EAE7C5B,MAF6C,aAE7CA,MAF6C,uBAE7CA,MAAM,CAAEN,aAFqC,EAG7CpB,GAH6C,CAA/C;AAKA,cAAMrB,KAAK,GAAG8B,QAAQ,CAACsC,IAAD,CAAtB;;AACA,YAAInD,KAAK,CAACI,GAAD,CAAL,IAAc,CAACuD,SAAS,CAAC5E,KAAD,EAAQY,gBAAR,CAA5B,EAAuD;AAAA;;AACrDyD,UAAAA,QAAQ,GAAG,KAAX;AACA,cAAIzB,MAAM,oBAACS,MAAM,CAAClB,OAAR,oDAAC,gBAAiBnB,IAAjB,CAAD,EAAyBK,GAAzB,CAAV,EAAyC;AACzCmC,UAAAA,cAAc,CAACrB,OAAf,GAAyB,IAAzB;AAEA,gBAAM0C,QAAQ,GAAGnC,YAAY,CAC3BH,sBAAsB,CAACmC,QAAD,EAAW3B,MAAX,aAAWA,MAAX,uBAAWA,MAAM,CAAE+B,cAAnB,EAAmCzD,GAAnC,CADK,CAAZ,SAEPA,kCAAkCL,aAF3B,CAAjB;AAMAqC,UAAAA,MAAM,CAAClB,OAAP,CAAenB,IAAf,IAAuBqC,MAAM,CAAClB,OAAP,CAAenB,IAAf,KAAwB,EAA/C;AACAqC,UAAAA,MAAM,CAAClB,OAAP,CAAenB,IAAf,EAAqBK,GAArB,IAA4BwD,QAA5B;AACA7B,UAAAA,QAAQ,CAACb,OAAT,CAAiB4C,GAAjB,CAAqB/D,IAArB,EAA2B,EACzB,GAAIgC,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBzD,IAArB,CADqB;AAEzBgE,YAAAA,KAAK,EAAE;AAFkB,WAA3B;AAID,SAjBD,MAiBO;AAAA;;AACL,cAAI,sBAAC3B,MAAM,CAAClB,OAAR,8EAAC,iBAAiBnB,IAAjB,CAAD,0DAAC,sBAAyBK,GAAzB,CAAD,CAAJ,EAAoC;AACpCmC,UAAAA,cAAc,CAACrB,OAAf,GAAyB,IAAzB;AACA,8BAAOkB,MAAM,CAAClB,OAAd,4EAAO,iBAAiBnB,IAAjB,CAAP,+DAAO,sBAAyBK,GAAzB,CAAP;;AACA,cAAI,CAAC/B,OAAO,CAAC+D,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAElB,OAAT,CAAR,IAA6B7C,OAAO,CAAC+D,MAAD,aAACA,MAAD,2CAACA,MAAM,CAAElB,OAAT,qDAAC,iBAAkBnB,IAAlB,CAAD,CAAxC,EAAmE;AAAA;;AACjE1B,YAAAA,OAAO,qBAAC+D,MAAM,CAAClB,OAAR,qDAAC,iBAAiBnB,IAAjB,CAAD,CAAP,yBAA0CqC,MAAM,CAAClB,OAAjD,mDAAmC,OAAO,iBAAiBnB,IAAjB,CAA1C;AACAqC,YAAAA,MAAM,CAAClB,OAAP,GAAiB,EAAE,GAAGkB,MAAM,CAAClB;AAAZ,aAAjB;AACAa,YAAAA,QAAQ,CAACb,OAAT,CAAiB4C,GAAjB,CAAqB/D,IAArB,EAA2B,EACzB,GAAIgC,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBzD,IAArB,CADqB;AAEzBgE,cAAAA,KAAK,EAAE;AAFkB,aAA3B;AAID;AACF;AACF;AACF;;AACD,QAAI,CAACX,QAAL,EAAe;AACbd,MAAAA,YAAY,CAACpB,OAAb,GAAuB,KAAvB;AACD;;AAED,QAAI7C,OAAO,CAAC+D,MAAM,CAAClB,OAAR,CAAP,IAA2B,CAAC7C,OAAO,CAACgF,kBAAD,CAAvC,EAA6D;AAC3Dd,MAAAA,cAAc,CAACrB,OAAf,GAAyB,IAAzB;AACAoB,MAAAA,YAAY,CAACpB,OAAb,GAAuB,IAAvB;AACD;;AAED,QAAIqB,cAAc,CAACrB,OAAnB,EAA4B;AAC1BqB,MAAAA,cAAc,CAACrB,OAAf,GAAyB,KAAzB;AACAsB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GA7DD;;AA+DA,QAAMwB,WAAW,GAAIzD,GAAD,IAA4BU,CAAD;;;AAC7CA,IAAAA,CAAC,CAACgD,eAAF;AACA,UAAMlE,IAAI,mBAAGQ,GAAG,CAACW,OAAP,iDAAG,aAAanB,IAA1B;;AACA,QAAI,CAACoC,aAAa,CAACjB,OAAd,CAAsBgD,GAAtB,CAA0B3D,GAAG,CAACW,OAA9B,CAAL,EAA6C;AAC3CiB,MAAAA,aAAa,CAACjB,OAAd,CAAsB4C,GAAtB,CAA0BvD,GAAG,CAACW,OAA9B,EAAuC,IAAvC;AACD;;AACD,QAAI,CAACmB,aAAa,CAACnB,OAAf,KAA0BY,MAA1B,aAA0BA,MAA1B,uBAA0BA,MAAM,CAAEqC,oBAAlC,CAAJ,EAA4D;AAC5D,UAAM9D,CAAC,GAAG0B,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBzD,IAArB,CAAV;AACAiD,IAAAA,eAAe,CAAC3C,CAAD,CAAf;AACD,GATD;;AAWA,QAAM+D,YAAY,GAAI7D,GAAD,IAA4BU,CAAD;;;AAC9CA,IAAAA,CAAC,CAACgD,eAAF;AACA,QAAI,CAAC5B,aAAa,CAACnB,OAAf,KAA0BY,MAA1B,aAA0BA,MAA1B,uBAA0BA,MAAM,CAAEqC,oBAAlC,CAAJ,EAA4D;AAC5D,UAAMpE,IAAI,oBAAGQ,GAAG,CAACW,OAAP,kDAAG,cAAanB,IAA1B;AACA,UAAMM,CAAC,GAAGE,GAAG,CAACW,OAAJ,IAAea,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBzD,IAArB,CAAzB;AACAiD,IAAAA,eAAe,CAAC3C,CAAD,CAAf;AACD,GAND;;AAQA,QAAMgE,KAAK,GAAG,CAAClB,IAAD,EAAcnD,KAAd;;;AACZ,QAAI,CAACmD,IAAL,EAAW;AAEX,UAAM5C,GAAG,GAAG+D,SAAS,EAArB;AACE/D,IAAAA,GAAqC,CAACW,OAAtC,GAAgDiC,IAAhD;AACF,UAAMpD,IAAI,GAAGO,gBAAgB,CAACC,GAAG,CAACW,OAAL,CAA7B;AACA,QAAI,CAACnB,IAAL,EAAW;AACX,UAAMwE,iBAAiB,GAAG7D,OAAO,CAACH,GAAG,CAACW,OAAL,CAAP,IAAyBN,UAAU,CAACL,GAAG,CAACW,OAAL,CAA7D;AACA,UAAMD,CAAC,GAAGc,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBzD,IAArB,CAAV;;AAEA,QACE,CAACgC,QAAQ,CAACb,OAAT,CAAiBgD,GAAjB,CAAqBnE,IAArB,CAAD,IACA,EAAE,CAAAkB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEF,KAAH,KAAYE,CAAC,CAACF,KAAF,CAAQyD,IAAR,CAAcrB,IAAD,IAAUA,IAAI,CAACjC,OAAL,KAAiBX,GAAG,CAACW,OAA5C,CAAd,CAFF,EAGE;AAAA;;AACA,UACER,OAAO,CAACH,GAAG,CAACW,OAAL,CAAP,IACAN,UAAU,CAACL,GAAG,CAACW,OAAL,CADV,IAEA,kBAAAX,GAAG,CAACW,OAAJ,gEAAaP,IAAb,MAAsB,OAHxB,EAIE;AACAJ,QAAAA,GAAG,CAACW,OAAJ,IAAeX,GAAG,CAACW,OAAJ,CAAYuD,gBAAZ,CAA6B,QAA7B,EAAuCL,YAAY,CAAC7D,GAAD,CAAnD,CAAf;AACD,OAND,MAMO;AACLA,QAAAA,GAAG,CAACW,OAAJ,IAAeX,GAAG,CAACW,OAAJ,CAAYuD,gBAAZ,CAA6B,OAA7B,EAAsCC,WAAW,CAACnE,GAAD,CAAjD,CAAf;AACAA,QAAAA,GAAG,CAACW,OAAJ,IAAeX,GAAG,CAACW,OAAJ,CAAYuD,gBAAZ,CAA6B,OAA7B,EAAsCT,WAAW,CAACzD,GAAD,CAAjD,CAAf;AACD;AACF;;AAED,UAAMgD,UAAU,GAAGrD,aAAa,CAC9B4B,MAD8B,aAC9BA,MAD8B,uBAC9BA,MAAM,CAAE7B,gBADsB,EAE9BH,iBAF8B,EAG9BE,KAH8B,CAAhC;AAMA,UAAM2E,UAAU,GAAc5C,QAAQ,CAACb,OAAT,CAAiBsC,GAAjB,CAAqBzD,IAArB,KAA8B;AAC1DgE,MAAAA,KAAK,EAAE,IADmD;AAE1D,UAAI/D,KAAK,IAAI;AAAEsD,QAAAA,UAAU,EAAEtD;AAAd,OAAb,CAF0D;AAG1D,UAAIuD,UAAU,IAAI;AAAEA,QAAAA;AAAF,OAAlB,CAH0D;AAI1D5C,MAAAA,IAAI,mBAAEJ,GAAG,CAACW,OAAN,kDAAE,cAAaP,IAJuC;AAK1DZ,MAAAA,IAAI,EAAEA,IALoD;AAM1D,UAAIwE,iBAAiB,IAAI;AAAEpD,QAAAA,OAAO,EAAE;AAAX,OAAzB,CAN0D;AAO1D,UAAIoD,iBAAiB,IAAI;AAAExD,QAAAA,KAAK,EAAE;AAAT,OAAzB,CAP0D;AAQ1DR,MAAAA;AAR0D,KAA5D;;AAUA,QAAIwB,QAAQ,CAACb,OAAT,CAAiBgD,GAAjB,CAAqBnE,IAArB,CAAJ,EAAgC;AAC9B,UAAI4E,UAAU,CAACpE,GAAX,IAAkBoE,UAAU,CAAC5D,KAAjC,EAAwC;AACtC4D,QAAAA,UAAU,CAAC5D,KAAX,CAAiB6D,IAAjB,CAAsBD,UAAU,CAACpE,GAAjC;AACD;;AACD,UACEoE,UAAU,CAAC5D,KAAX,IAEA,CAAC4D,UAAU,CAAC5D,KAAX,CAAiByD,IAAjB,CAAuBrB,IAAD,IAAUA,IAAI,CAACjC,OAAL,KAAiBX,GAAG,CAACW,OAArD,CAHH,EAIE;AACAyD,QAAAA,UAAU,CAAC5D,KAAX,CAAiB6D,IAAjB,CAAsBrE,GAAtB;AACA,eAAOoE,UAAU,CAACpE,GAAlB;AACD;AACF;;AACDwB,IAAAA,QAAQ,CAACb,OAAT,CAAiB4C,GAAjB,CAAqB/D,IAArB,EAA2B4E,UAA3B;AACD,GAxDD;;AA0DA,QAAMD,WAAW,GAAInE,GAAD,IAA2B;;;AAC7C2B,IAAAA,eAAe,CAAChB,OAAhB,CAAwB4C,GAAxB,kBAA4BvD,GAAG,CAACW,OAAhC,kDAA4B,cAAanB,IAAzC,EAA+C,IAA/C;AACAQ,IAAAA,GAAG,CAACW,OAAJ,IACEX,GAAG,CAACW,OAAJ,CAAY2D,mBAAZ,CAAgC,OAAhC,EAAyCH,WAAW,CAACnE,GAAD,CAApD,EAA2D,IAA3D,CADF;AAED,GAJD;;AAMA,SAAO;AACL8D,IAAAA,KAAK,EAAEA,KADF;AAEL3B,IAAAA,UAAU,EAAEA,UAFP;AAGLN,IAAAA,MAAM,EAAEA,MAAM,CAAClB,OAHV;AAILoB,IAAAA,YAAY,EAAEA,YAAY,CAACpB;AAJtB,GAAP;AAMD,CA5LM;;;;"}