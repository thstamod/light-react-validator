{"version":3,"file":"index.modern.js","sources":["../src/logic/isEmpty.ts","../src/logic/isArray.ts","../src/utils/builtIns.ts","../src/logic/checkValidators.ts","../src/logic/hasNameAttribute.ts","../src/logic/isRadio.ts","../src/logic/isCheckbox.ts","../src/logic/getValue.ts","../src/index.ts"],"sourcesContent":["export const isEmpty = (o: object): boolean => {\n  if (Array.isArray(o)) {\n    return !o.length\n  }\n  return Object.keys(o).length === 0 && o.constructor === Object\n}\n","export const isArray = (a: any) => Array.isArray(a)\n","import { isEmpty } from '../logic/isEmpty'\nimport { isArray } from '../logic/isArray'\n\nexport default {\n  required: <T>(value: T): boolean => {\n    if (typeof value === 'string') {\n      return (value as string).trim().length > 0\n    }\n    if (\n      value &&\n      typeof value === 'object' &&\n      !isEmpty((value as unknown) as object)\n    ) {\n      return true\n    }\n    return false\n  },\n  email: (input: string): boolean =>\n    /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(input),\n  minLength: (input: string, len: number): boolean =>\n    input.toString().length < len,\n  maxLength: (input: string, len: number): boolean =>\n    input.toString().length > len,\n  minCheckboxes: (input: any, availableOptions: any = null) => {\n    if (\n      typeof input === 'object' &&\n      isArray(input) &&\n      availableOptions &&\n      typeof availableOptions === 'number'\n    ) {\n      return (input as []).length >= availableOptions\n    }\n    return false\n  }\n}\n","import { Config } from '../types/configuration'\nimport { Rules } from '../types/fields'\n\nconst checkForValidators = (\n  configValidators: Config | null,\n  builtInValidators: any,\n  name: string,\n  data?: Rules\n) => {\n  if (data?.customValidators?.[name]) {\n    return data.customValidators[name]\n  }\n  if (configValidators?.[name]) {\n    return configValidators[name]\n  }\n  if (builtInValidators[name]) {\n    return builtInValidators[name]\n  } else {\n    console.warn(`no validation function with mane ${name}`)\n  }\n}\n\nexport const getValidators = (\n  configValidators: Config | null,\n  builtInValidators: object,\n  data?: Rules\n) => {\n  if (!data) return\n  const f = {}\n  for (const key in data?.rules) {\n    const t = checkForValidators(configValidators, builtInValidators, key, data)\n    if (t) {\n      f[key] = t\n    }\n  }\n  return f\n}\n","export const hasNameAttribute = (ref: HTMLInputElement) => {\n  const name = ref.name\n  if (name) {\n    return name\n  } else {\n    console.warn(`the field ${ref.outerHTML} must have a unique name attribute`)\n    return undefined\n  }\n}\n","export const isRadio = (ref: HTMLInputElement) => ref.type === 'radio'\n","export const isCheckbox = (ref: HTMLInputElement) => ref.type === 'checkbox'\n","import { isArray } from './isArray'\nexport const getValue = <T>(v: T, _type: string): [] | any | null => {\n  // eslint-disable-next-line no-debugger\n  // debugger\n  if (isArray(v)) {\n    return ((v as unknown) as React.MutableRefObject<HTMLInputElement>[])\n      .filter((e) => e.current.checked)\n      .map((e) => e.current.value)\n  }\n  if (\n    ((v as unknown) as React.MutableRefObject<HTMLInputElement>).current.checked\n  ) {\n    return ((v as unknown) as React.MutableRefObject<HTMLInputElement>).current\n      .value\n  }\n  return null\n}\n","import { useRef, useState, useEffect, createRef, RefObject } from 'react'\nimport builtInValidators from './utils/builtIns'\nimport { Config, UseValidator } from './types/configuration'\nimport { DataField, Rules } from './types/fields'\nimport { getValidators } from './logic/checkValidators'\nimport { hasNameAttribute } from './logic/hasNameAttribute'\nimport { isRadio } from './logic/isRadio'\nimport { isEmpty } from './logic/isEmpty'\nimport { isCheckbox } from './logic/isCheckbox'\nimport { getValue } from './logic/getValue'\n\nexport const useValidator = (config?: Config): UseValidator => {\n  const elements = useRef<Map<string, DataField>>(new Map())\n  const touchedElements = useRef(new Map())\n  const dirtyElements = useRef(new Map())\n  const errors = useRef({})\n  const customValidators = useRef(null)\n  const customConfiguration = useRef<any>({})\n  const triedToSubmit = useRef(false)\n  const formValidity = useRef(true)\n  const shouldRerender = useRef(false)\n  const [, rerender] = useState()\n\n  const submitForm = (fn: Function) => (e: Event) => {\n    e.preventDefault()\n    const prevFormValidity = formValidity.current\n    if (elements.current.size !== dirtyElements.current.size) {\n      dirtyElements.current = new Map(elements.current)\n    }\n    elements.current.forEach((value: DataField) => {\n      fieldValidation(value)\n    })\n    triedToSubmit.current = true\n\n    if (formValidity.current !== prevFormValidity) {\n      rerender({})\n      return\n    }\n    fn()\n  }\n\n  useEffect(() => {\n    if (config?.customValidators) {\n      customValidators.current = config.customValidators\n    }\n    if (config?.validateFormOnSubmit) {\n      customConfiguration.current.validateFormOnSubmit = true\n    }\n  }, [])\n\n  useEffect(() => {\n    // console.log(elements)\n  })\n\n  const fieldValidation = (elem: DataField): void => {\n    // eslint-disable-next-line no-debugger\n    // debugger\n    let _isValid = true\n    const { fieldRules, validators, name, type } =\n      elements.current.get(elem.name!) || {}\n    const { rules, messages, options } = fieldRules || {}\n    if (rules && name) {\n      for (const key in validators) {\n        const validator = validators[key]\n        const availableOptions = options && options[key]\n        // eslint-disable-next-line no-debugger\n        debugger\n        // TODO: refactor. it's not working correctly\n        const value =\n          type === 'text'\n            ? elem.ref.current?.value\n            : // TODO: should this returns number instead of boolean\n              getValue(!isEmpty(elem.group!) ? elem.group : elem.ref, type!)\n        // console.log(value)\n        if (rules[key] && !validator(value, availableOptions)) {\n          _isValid = false\n          if (errors.current?.[name]?.[key]) continue\n          shouldRerender.current = true\n          if (name in errors.current) {\n            errors.current[name][key] = messages?.[key]\n          } else {\n            errors.current[name] = {\n              [key]: messages?.[key],\n              ...errors.current[name]\n            }\n          }\n          elements.current.set(name, {\n            ...(elements.current.get(name) as DataField),\n            valid: false\n          })\n        } else {\n          if (!errors.current?.[name]?.[key]) continue\n          shouldRerender.current = true\n          delete errors.current?.[name]?.[key]\n          if (!isEmpty(errors?.current) && isEmpty(errors?.current?.[name])) {\n            isEmpty(errors.current?.[name]) && delete errors.current?.[name]\n            errors.current = { ...errors.current }\n            elements.current.set(name, {\n              ...(elements.current.get(name) as DataField),\n              valid: true\n            })\n          }\n        }\n      }\n    }\n    if (!_isValid) {\n      formValidity.current = false\n    }\n\n    if (isEmpty(errors.current)) {\n      shouldRerender.current = true\n      formValidity.current = true\n    }\n\n    if (shouldRerender.current) {\n      shouldRerender.current = false\n      rerender({})\n    }\n  }\n\n  const detectInput = (ref: RefObject<HTMLInputElement>) => (e: Event) => {\n    e.stopPropagation()\n    const name = ref.current?.name\n    if (!dirtyElements.current.has(ref.current)) {\n      dirtyElements.current.set(ref.current, null)\n    }\n    if (\n      !triedToSubmit.current &&\n      customConfiguration.current.validateFormOnSubmit\n    )\n      return\n    const t = elements.current.get(name!)\n    fieldValidation(t!)\n  }\n\n  const detectChange = (ref: RefObject<HTMLInputElement>) => (e: Event) => {\n    e.stopPropagation()\n    const name = ref.current?.name\n    const t = ref.current && elements.current.get(name!)\n    fieldValidation(t!)\n  }\n\n  const track = (elem: HTMLInputElement, rules?: Rules): void => {\n    if (!elem) return\n\n    const ref = createRef<HTMLInputElement>()\n    ;(ref as React.MutableRefObject<HTMLInputElement>).current = elem\n    const name = hasNameAttribute(ref.current!)\n    if (!name) return\n    const isRadioOrCheckbox = isRadio(ref.current!) || isCheckbox(ref.current!)\n    const e = elements.current.get(name)\n    // TODO: this needs refactoring yesterday\n    if (\n      !elements.current.has(name) ||\n      !(e?.group && e.group.some((elem) => elem.current === ref.current))\n    ) {\n      if (isRadio(ref.current!) || isCheckbox(ref.current!)) {\n        ref.current && ref.current.addEventListener('change', detectChange(ref))\n      } else {\n        ref.current && ref.current.addEventListener('focus', detectTouch(ref))\n        ref.current && ref.current.addEventListener('input', detectInput(ref))\n      }\n    }\n    const validators = getValidators(\n      customValidators.current,\n      builtInValidators,\n      rules\n    )\n\n    const dataFields: DataField = elements.current.get(name) || {\n      valid: true,\n      ...(rules && { fieldRules: rules }),\n      ...(validators && { validators }),\n      type: ref.current?.type,\n      name: name,\n      ...(isRadioOrCheckbox && { checked: false }),\n      ...(isRadioOrCheckbox && { group: [] }),\n      ref\n    }\n    if (elements.current.has(name)) {\n      if (dataFields.ref && dataFields.group) {\n        dataFields.group.push(dataFields.ref)\n      }\n      if (\n        dataFields.group &&\n        // TODO: refactor this\n        !dataFields.group.some((elem) => elem.current === ref.current)\n      ) {\n        dataFields.group.push(ref)\n        delete dataFields.ref\n      }\n    }\n    elements.current.set(name, dataFields)\n  }\n\n  const detectTouch = (ref: RefObject<HTMLInputElement>) => () => {\n    touchedElements.current.set(ref, null)\n    ref.current &&\n      ref.current.removeEventListener('focus', detectTouch(ref), true)\n  }\n\n  return {\n    track: track,\n    submitForm: submitForm,\n    errors: errors.current,\n    formValidity: formValidity.current\n  }\n}\n"],"names":["isEmpty","o","Array","isArray","length","Object","keys","constructor","a","required","value","trim","email","input","test","minLength","len","toString","maxLength","minCheckboxes","availableOptions","checkForValidators","configValidators","builtInValidators","name","data","customValidators","console","warn","getValidators","f","key","rules","t","hasNameAttribute","ref","outerHTML","undefined","isRadio","type","isCheckbox","getValue","v","_type","filter","e","current","checked","map","useValidator","config","elements","useRef","Map","touchedElements","dirtyElements","errors","customConfiguration","triedToSubmit","formValidity","shouldRerender","rerender","useState","submitForm","fn","preventDefault","prevFormValidity","size","forEach","fieldValidation","useEffect","validateFormOnSubmit","elem","_isValid","fieldRules","validators","get","messages","options","validator","group","set","valid","detectInput","stopPropagation","has","detectChange","track","createRef","isRadioOrCheckbox","some","addEventListener","detectTouch","dataFields","push","removeEventListener"],"mappings":"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"}