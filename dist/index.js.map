{"version":3,"file":"index.js","sources":["../src/logic/isEmpty.ts","../src/logic/isArray.ts","../src/utils/builtIns.ts","../src/logic/checkValidators.ts","../src/logic/hasNameAttribute.ts","../src/logic/isRadio.ts","../src/logic/isCheckbox.ts","../src/logic/getValue.ts","../src/index.ts"],"sourcesContent":["export const isEmpty = (o: object): boolean => {\n  if (Array.isArray(o)) {\n    return !o.length\n  }\n  return Object.keys(o).length === 0 && o.constructor === Object\n}\n","export const isArray = (a: any) => Array.isArray(a)\n","import { isEmpty } from '../logic/isEmpty'\nimport { isArray } from '../logic/isArray'\n\nexport default {\n  required: <T>(value: T): boolean => {\n    if (typeof value === 'string') {\n      return (value as string).trim().length > 0\n    }\n    if (typeof value === 'number') {\n      return !!value\n    }\n    if (\n      value &&\n      typeof value === 'object' &&\n      !isEmpty((value as unknown) as object)\n    ) {\n      return true\n    }\n    return false\n  },\n  email: (input: string): boolean =>\n    /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(input),\n  minLength: (input: string, len: number): boolean =>\n    input.toString().length >= len,\n  maxLength: (input: string, len: number): boolean =>\n    input.toString().length <= len,\n  minCheckboxes: (input: any, availableOptions: any = null) => {\n    if (\n      typeof input === 'object' &&\n      isArray(input) &&\n      availableOptions &&\n      typeof availableOptions === 'number'\n    ) {\n      return (input as []).length >= availableOptions\n    }\n    return false\n  }\n}\n","import { Config } from '../types/configuration'\nimport { Rules } from '../types/fields'\n\nconst checkForValidators = (\n  configValidators: Config | null,\n  builtInValidators: any,\n  name: string,\n  rules?: Rules\n) => {\n  if (rules?.customValidators?.[name]) {\n    return rules.customValidators[name]\n  }\n  if (configValidators?.[name]) {\n    return configValidators[name]\n  }\n  if (builtInValidators[name]) {\n    return builtInValidators[name]\n  } else {\n    console.warn(`no validation function with mane ${name}`)\n  }\n}\n\nexport const getValidators = (\n  configValidators: Config | null,\n  builtInValidators: object,\n  rules?: Rules\n) => {\n  if (!rules) return\n  const f = {}\n  for (const key in rules?.rules) {\n    const t = checkForValidators(\n      configValidators,\n      builtInValidators,\n      key,\n      rules\n    )\n    if (t) {\n      f[key] = t\n    }\n  }\n  return f\n}\n","export const hasNameAttribute = (ref: HTMLInputElement) => {\n  const name = ref.name\n  if (name) {\n    return name\n  } else {\n    console.warn(`the field ${ref.outerHTML} must have a unique name attribute`)\n    return undefined\n  }\n}\n","export const isRadio = (ref: HTMLInputElement) => ref.type === 'radio'\n","export const isCheckbox = (ref: HTMLInputElement) => ref.type === 'checkbox'\n","import { isArray } from './isArray'\nexport const getValue = <T>(v: T, _type: string): [] | any | null => {\n  if (isArray(v)) {\n    return ((v as unknown) as React.MutableRefObject<HTMLInputElement>[])\n      .filter((e) => e.current.checked)\n      .map((e) => e.current.value)\n  }\n  if (\n    ((v as unknown) as React.MutableRefObject<HTMLInputElement>).current.checked\n  ) {\n    return ((v as unknown) as React.MutableRefObject<HTMLInputElement>).current\n      .value\n  }\n  return null\n}\n","import { useRef, useState, createRef, RefObject } from 'react'\nimport builtInValidators from './utils/builtIns'\nimport { Config, UseValidator } from './types/configuration'\nimport { DataField, Rules } from './types/fields'\nimport { getValidators } from './logic/checkValidators'\nimport { hasNameAttribute } from './logic/hasNameAttribute'\nimport { isRadio } from './logic/isRadio'\nimport { isEmpty } from './logic/isEmpty'\nimport { isCheckbox } from './logic/isCheckbox'\nimport { getValue } from './logic/getValue'\n\nexport const useValidator = (config?: Config): UseValidator => {\n  const elements = useRef<Map<string, DataField>>(new Map())\n  const touchedElements = useRef(new Map())\n  const dirtyElements = useRef(new Map())\n  const errors = useRef({})\n  const triedToSubmit = useRef(false)\n  const formValidity = useRef(true)\n  const shouldRerender = useRef(false)\n  const [, rerender] = useState()\n\n  const submitForm = (fn: Function) => (e: Event) => {\n    e.preventDefault()\n    const prevFormValidity = formValidity.current\n    if (elements.current.size !== dirtyElements.current.size) {\n      dirtyElements.current = new Map(elements.current)\n    }\n    elements.current.forEach((value: DataField) => {\n      fieldValidation(value)\n    })\n    triedToSubmit.current = true\n\n    if (formValidity.current !== prevFormValidity) {\n      rerender({})\n      return\n    }\n    fn()\n  }\n\n  const fieldValidation = (elem: DataField): void => {\n    let _isValid = true\n    const { fieldRules, validators, name, type } =\n      elements.current.get(elem.name!) || {}\n    const { rules, messages, options } = fieldRules || {}\n    if (rules && name) {\n      for (const key in validators) {\n        const validator = validators[key]\n        const availableOptions = options && options[key]\n        // eslint-disable-next-line no-debugger\n        // debugger\n        // TODO: refactor. it's not working correctly\n        const value =\n          type === 'text'\n            ? elem.ref.current?.value\n            : // TODO: should this returns number instead of boolean\n              getValue(!isEmpty(elem.group!) ? elem.group : elem.ref, type!)\n        // console.log(value)\n        if (rules[key] && !validator(value, availableOptions)) {\n          _isValid = false\n          if (errors.current?.[name]?.[key]) continue\n          shouldRerender.current = true\n          if (name in errors.current) {\n            errors.current[name][key] = messages?.[key]\n          } else {\n            errors.current[name] = {\n              [key]: messages?.[key],\n              ...errors.current[name]\n            }\n          }\n          elements.current.set(name, {\n            ...(elements.current.get(name) as DataField),\n            valid: false\n          })\n        } else {\n          if (!errors.current?.[name]?.[key]) continue\n          shouldRerender.current = true\n          delete errors.current?.[name]?.[key]\n          if (!isEmpty(errors?.current) && isEmpty(errors?.current?.[name])) {\n            isEmpty(errors.current?.[name]) && delete errors.current?.[name]\n            errors.current = { ...errors.current }\n            elements.current.set(name, {\n              ...(elements.current.get(name) as DataField),\n              valid: true\n            })\n          }\n        }\n      }\n    }\n    if (!_isValid) {\n      formValidity.current = false\n    }\n\n    if (isEmpty(errors.current)) {\n      shouldRerender.current = true\n      formValidity.current = true\n    }\n\n    if (shouldRerender.current) {\n      shouldRerender.current = false\n      rerender({})\n    }\n  }\n\n  const detectInput = (ref: RefObject<HTMLInputElement>) => (e: Event) => {\n    e.stopPropagation()\n    const name = ref.current?.name\n    if (!dirtyElements.current.has(ref.current)) {\n      dirtyElements.current.set(ref.current, null)\n    }\n    if (!triedToSubmit.current && config?.validateFormOnSubmit) return\n    const t = elements.current.get(name!)\n    fieldValidation(t!)\n  }\n\n  const detectChange = (ref: RefObject<HTMLInputElement>) => (e: Event) => {\n    e.stopPropagation()\n    if (!triedToSubmit.current && config?.validateFormOnSubmit) return\n    const name = ref.current?.name\n    const t = ref.current && elements.current.get(name!)\n    fieldValidation(t!)\n  }\n\n  const track = (elem: HTMLInputElement, rules?: Rules): void => {\n    if (!elem) return\n\n    const ref = createRef<HTMLInputElement>()\n    ;(ref as React.MutableRefObject<HTMLInputElement>).current = elem\n    const name = hasNameAttribute(ref.current!)\n    if (!name) return\n    const isRadioOrCheckbox = isRadio(ref.current!) || isCheckbox(ref.current!)\n    const e = elements.current.get(name)\n    // TODO: this needs refactoring yesterday\n    if (\n      !elements.current.has(name) ||\n      !(e?.group && e.group.some((elem) => elem.current === ref.current))\n    ) {\n      if (isRadio(ref.current!) || isCheckbox(ref.current!)) {\n        ref.current && ref.current.addEventListener('change', detectChange(ref))\n      } else {\n        ref.current && ref.current.addEventListener('focus', detectTouch(ref))\n        ref.current && ref.current.addEventListener('input', detectInput(ref))\n      }\n    }\n\n    const validators = getValidators(\n      config?.customValidators,\n      builtInValidators,\n      rules\n    )\n\n    const dataFields: DataField = elements.current.get(name) || {\n      valid: true,\n      ...(rules && { fieldRules: rules }),\n      ...(validators && { validators }),\n      type: ref.current?.type,\n      name: name,\n      ...(isRadioOrCheckbox && { checked: false }),\n      ...(isRadioOrCheckbox && { group: [] }),\n      ref\n    }\n    if (elements.current.has(name)) {\n      if (dataFields.ref && dataFields.group) {\n        dataFields.group.push(dataFields.ref)\n      }\n      if (\n        dataFields.group &&\n        // TODO: refactor this\n        !dataFields.group.some((elem) => elem.current === ref.current)\n      ) {\n        dataFields.group.push(ref)\n        delete dataFields.ref\n      }\n    }\n    elements.current.set(name, dataFields)\n  }\n\n  const detectTouch = (ref: RefObject<HTMLInputElement>) => () => {\n    touchedElements.current.set(ref, null)\n    ref.current &&\n      ref.current.removeEventListener('focus', detectTouch(ref), true)\n  }\n\n  return {\n    track: track,\n    submitForm: submitForm,\n    errors: errors.current,\n    formValidity: formValidity.current\n  }\n}\n"],"names":["isEmpty","o","Array","isArray","length","Object","keys","constructor","a","required","value","trim","email","input","test","minLength","len","toString","maxLength","minCheckboxes","availableOptions","checkForValidators","configValidators","builtInValidators","name","rules","customValidators","console","warn","getValidators","f","key","t","hasNameAttribute","ref","outerHTML","undefined","isRadio","type","isCheckbox","getValue","v","_type","filter","e","current","checked","map","useValidator","config","elements","useRef","Map","touchedElements","dirtyElements","errors","triedToSubmit","formValidity","shouldRerender","useState","rerender","submitForm","fn","preventDefault","prevFormValidity","size","forEach","fieldValidation","elem","_isValid","get","fieldRules","validators","messages","options","validator","group","set","valid","detectInput","stopPropagation","has","validateFormOnSubmit","detectChange","track","createRef","isRadioOrCheckbox","some","addEventListener","detectTouch","dataFields","push","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD;AACrB,MAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AACpB,WAAO,CAACA,CAAC,CAACG,MAAV;AACD;;AACD,SAAOC,MAAM,CAACC,IAAP,CAAYL,CAAZ,EAAeG,MAAf,KAA0B,CAA1B,IAA+BH,CAAC,CAACM,WAAF,KAAkBF,MAAxD;AACD,CALM;;ACAA,IAAMF,OAAO,GAAG,SAAVA,OAAU,CAACK,CAAD;AAAA,SAAYN,KAAK,CAACC,OAAN,CAAcK,CAAd,CAAZ;AAAA,CAAhB;;ACGP,wBAAe;AACbC,EAAAA,QAAQ,EAAE,kBAAIC,KAAJ;AACR,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAQA,KAAgB,CAACC,IAAjB,GAAwBP,MAAxB,GAAiC,CAAzC;AACD;;AACD,QAAI,OAAOM,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAO,CAAC,CAACA,KAAT;AACD;;AACD,QACEA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEA,CAACV,OAAO,CAAEU,KAAF,CAHV,EAIE;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAhBY;AAiBbE,EAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,WACL,4CAA4CC,IAA5C,CAAiDD,KAAjD,CADK;AAAA,GAjBM;AAmBbE,EAAAA,SAAS,EAAE,mBAACF,KAAD,EAAgBG,GAAhB;AAAA,WACTH,KAAK,CAACI,QAAN,GAAiBb,MAAjB,IAA2BY,GADlB;AAAA,GAnBE;AAqBbE,EAAAA,SAAS,EAAE,mBAACL,KAAD,EAAgBG,GAAhB;AAAA,WACTH,KAAK,CAACI,QAAN,GAAiBb,MAAjB,IAA2BY,GADlB;AAAA,GArBE;AAuBbG,EAAAA,aAAa,EAAE,uBAACN,KAAD,EAAaO,gBAAb;QAAaA;AAAAA,MAAAA,mBAAwB;;;AAClD,QACE,OAAOP,KAAP,KAAiB,QAAjB,IACAV,OAAO,CAACU,KAAD,CADP,IAEAO,gBAFA,IAGA,OAAOA,gBAAP,KAA4B,QAJ9B,EAKE;AACA,aAAQP,KAAY,CAACT,MAAb,IAAuBgB,gBAA/B;AACD;;AACD,WAAO,KAAP;AACD;AAjCY,CAAf;;ACAA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,gBADyB,EAEzBC,iBAFyB,EAGzBC,IAHyB,EAIzBC,KAJyB;;;AAMzB,MAAIA,KAAJ,aAAIA,KAAJ,gDAAIA,KAAK,CAAEC,gBAAX,0DAAI,sBAA0BF,IAA1B,CAAJ,EAAqC;AACnC,WAAOC,KAAK,CAACC,gBAAN,CAAuBF,IAAvB,CAAP;AACD;;AACD,MAAIF,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAGE,IAAH,CAApB,EAA8B;AAC5B,WAAOF,gBAAgB,CAACE,IAAD,CAAvB;AACD;;AACD,MAAID,iBAAiB,CAACC,IAAD,CAArB,EAA6B;AAC3B,WAAOD,iBAAiB,CAACC,IAAD,CAAxB;AACD,GAFD,MAEO;AACLG,IAAAA,OAAO,CAACC,IAAR,uCAAiDJ,IAAjD;AACD;AACF,CAjBD;;AAmBA,AAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAC3BP,gBAD2B,EAE3BC,iBAF2B,EAG3BE,KAH2B;AAK3B,MAAI,CAACA,KAAL,EAAY;AACZ,MAAMK,CAAC,GAAG,EAAV;;AACA,OAAK,IAAMC,GAAX,IAAkBN,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEA,KAAzB,EAAgC;AAC9B,QAAMO,CAAC,GAAGX,kBAAkB,CAC1BC,gBAD0B,EAE1BC,iBAF0B,EAG1BQ,GAH0B,EAI1BN,KAJ0B,CAA5B;;AAMA,QAAIO,CAAJ,EAAO;AACLF,MAAAA,CAAC,CAACC,GAAD,CAAD,GAASC,CAAT;AACD;AACF;;AACD,SAAOF,CAAP;AACD,CAnBM;;ACtBA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD;AAC9B,MAAMV,IAAI,GAAGU,GAAG,CAACV,IAAjB;;AACA,MAAIA,IAAJ,EAAU;AACR,WAAOA,IAAP;AACD,GAFD,MAEO;AACLG,IAAAA,OAAO,CAACC,IAAR,gBAA0BM,GAAG,CAACC,SAA9B;AACA,WAAOC,SAAP;AACD;AACF,CARM;;ACAA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACH,GAAD;AAAA,SAA2BA,GAAG,CAACI,IAAJ,KAAa,OAAxC;AAAA,CAAhB;;ACAA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACL,GAAD;AAAA,SAA2BA,GAAG,CAACI,IAAJ,KAAa,UAAxC;AAAA,CAAnB;;ACCA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAIC,CAAJ,EAAUC,KAAV;AACtB,MAAIvC,OAAO,CAACsC,CAAD,CAAX,EAAgB;AACd,WAASA,CAA4D,CAClEE,MADM,CACC,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,OAAF,CAAUC,OAAjB;AAAA,KADD,EAENC,GAFM,CAEF,UAACH,CAAD;AAAA,aAAOA,CAAC,CAACC,OAAF,CAAUnC,KAAjB;AAAA,KAFE,CAAT;AAGD;;AACD,MACI+B,CAA0D,CAACI,OAA3D,CAAmEC,OADvE,EAEE;AACA,WAASL,CAA0D,CAACI,OAA3D,CACNnC,KADH;AAED;;AACD,SAAO,IAAP;AACD,CAbM;;ICUMsC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAC1B,MAAMC,QAAQ,GAAGC,YAAM,CAAyB,IAAIC,GAAJ,EAAzB,CAAvB;AACA,MAAMC,eAAe,GAAGF,YAAM,CAAC,IAAIC,GAAJ,EAAD,CAA9B;AACA,MAAME,aAAa,GAAGH,YAAM,CAAC,IAAIC,GAAJ,EAAD,CAA5B;AACA,MAAMG,MAAM,GAAGJ,YAAM,CAAC,EAAD,CAArB;AACA,MAAMK,aAAa,GAAGL,YAAM,CAAC,KAAD,CAA5B;AACA,MAAMM,YAAY,GAAGN,YAAM,CAAC,IAAD,CAA3B;AACA,MAAMO,cAAc,GAAGP,YAAM,CAAC,KAAD,CAA7B;;kBACqBQ,cAAQ;MAApBC;;AAET,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,WAAkB,UAAClB,CAAD;AACnCA,MAAAA,CAAC,CAACmB,cAAF;AACA,UAAMC,gBAAgB,GAAGP,YAAY,CAACZ,OAAtC;;AACA,UAAIK,QAAQ,CAACL,OAAT,CAAiBoB,IAAjB,KAA0BX,aAAa,CAACT,OAAd,CAAsBoB,IAApD,EAA0D;AACxDX,QAAAA,aAAa,CAACT,OAAd,GAAwB,IAAIO,GAAJ,CAAQF,QAAQ,CAACL,OAAjB,CAAxB;AACD;;AACDK,MAAAA,QAAQ,CAACL,OAAT,CAAiBqB,OAAjB,CAAyB,UAACxD,KAAD;AACvByD,QAAAA,eAAe,CAACzD,KAAD,CAAf;AACD,OAFD;AAGA8C,MAAAA,aAAa,CAACX,OAAd,GAAwB,IAAxB;;AAEA,UAAIY,YAAY,CAACZ,OAAb,KAAyBmB,gBAA7B,EAA+C;AAC7CJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACA;AACD;;AACDE,MAAAA,EAAE;AACH,KAhBkB;AAAA,GAAnB;;AAkBA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AACtB,QAAIC,QAAQ,GAAG,IAAf;;eAEEnB,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqBF,IAAI,CAAC5C,IAA1B,KAAoC;QAD9B+C,kBAAAA;QAAYC,kBAAAA;QAAYhD,YAAAA;QAAMc,YAAAA;;gBAEDiC,UAAU,IAAI;QAA3C9C,cAAAA;QAAOgD,iBAAAA;QAAUC,gBAAAA;;AACzB,QAAIjD,KAAK,IAAID,IAAb,EAAmB;AACjB,WAAK,IAAMO,GAAX,IAAkByC,UAAlB,EAA8B;AAAA;;AAC5B,YAAMG,SAAS,GAAGH,UAAU,CAACzC,GAAD,CAA5B;AACA,YAAMX,gBAAgB,GAAGsD,OAAO,IAAIA,OAAO,CAAC3C,GAAD,CAA3C;AAIA,YAAMrB,KAAK,GACT4B,IAAI,KAAK,MAAT,wBACI8B,IAAI,CAAClC,GAAL,CAASW,OADb,sDACI,kBAAkBnC,KADtB,GAGI8B,QAAQ,CAAC,CAACxC,OAAO,CAACoE,IAAI,CAACQ,KAAN,CAAR,GAAwBR,IAAI,CAACQ,KAA7B,GAAqCR,IAAI,CAAClC,GAA3C,AAAA,CAJd;;AAMA,YAAIT,KAAK,CAACM,GAAD,CAAL,IAAc,CAAC4C,SAAS,CAACjE,KAAD,EAAQU,gBAAR,CAA5B,EAAuD;AAAA;;AACrDiD,UAAAA,QAAQ,GAAG,KAAX;AACA,iCAAId,MAAM,CAACV,OAAX,4EAAI,gBAAiBrB,IAAjB,CAAJ,yDAAI,qBAAyBO,GAAzB,CAAJ,EAAmC;AACnC2B,UAAAA,cAAc,CAACb,OAAf,GAAyB,IAAzB;;AACA,cAAIrB,IAAI,IAAI+B,MAAM,CAACV,OAAnB,EAA4B;AAC1BU,YAAAA,MAAM,CAACV,OAAP,CAAerB,IAAf,EAAqBO,GAArB,IAA4B0C,QAA5B,aAA4BA,QAA5B,uBAA4BA,QAAQ,CAAG1C,GAAH,CAApC;AACD,WAFD,MAEO;AAAA;;AACLwB,YAAAA,MAAM,CAACV,OAAP,CAAerB,IAAf,wCACGO,GADH,IACS0C,QADT,aACSA,QADT,uBACSA,QAAQ,CAAG1C,GAAH,CADjB,cAEKwB,MAAM,CAACV,OAAP,CAAerB,IAAf,CAFL;AAID;;AACD0B,UAAAA,QAAQ,CAACL,OAAT,CAAiBgC,GAAjB,CAAqBrD,IAArB,eACM0B,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqB9C,IAArB,CADN;AAEEsD,YAAAA,KAAK,EAAE;AAFT;AAID,SAhBD,MAgBO;AAAA;;AACL,cAAI,sBAACvB,MAAM,CAACV,OAAR,8EAAC,iBAAiBrB,IAAjB,CAAD,0DAAC,sBAAyBO,GAAzB,CAAD,CAAJ,EAAoC;AACpC2B,UAAAA,cAAc,CAACb,OAAf,GAAyB,IAAzB;AACA,8BAAOU,MAAM,CAACV,OAAd,4EAAO,iBAAiBrB,IAAjB,CAAP,+DAAO,sBAAyBO,GAAzB,CAAP;;AACA,cAAI,CAAC/B,OAAO,CAACuD,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEV,OAAT,CAAR,IAA6B7C,OAAO,CAACuD,MAAD,aAACA,MAAD,2CAACA,MAAM,CAAEV,OAAT,qDAAC,iBAAkBrB,IAAlB,CAAD,CAAxC,EAAmE;AAAA;;AACjExB,YAAAA,OAAO,qBAACuD,MAAM,CAACV,OAAR,qDAAC,iBAAiBrB,IAAjB,CAAD,CAAP,yBAA0C+B,MAAM,CAACV,OAAjD,mDAAmC,OAAO,iBAAiBrB,IAAjB,CAA1C;AACA+B,YAAAA,MAAM,CAACV,OAAP,gBAAsBU,MAAM,CAACV,OAA7B;AACAK,YAAAA,QAAQ,CAACL,OAAT,CAAiBgC,GAAjB,CAAqBrD,IAArB,eACM0B,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqB9C,IAArB,CADN;AAEEsD,cAAAA,KAAK,EAAE;AAFT;AAID;AACF;AACF;AACF;;AACD,QAAI,CAACT,QAAL,EAAe;AACbZ,MAAAA,YAAY,CAACZ,OAAb,GAAuB,KAAvB;AACD;;AAED,QAAI7C,OAAO,CAACuD,MAAM,CAACV,OAAR,CAAX,EAA6B;AAC3Ba,MAAAA,cAAc,CAACb,OAAf,GAAyB,IAAzB;AACAY,MAAAA,YAAY,CAACZ,OAAb,GAAuB,IAAvB;AACD;;AAED,QAAIa,cAAc,CAACb,OAAnB,EAA4B;AAC1Ba,MAAAA,cAAc,CAACb,OAAf,GAAyB,KAAzB;AACAe,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GA9DD;;AAgEA,MAAMmB,WAAW,GAAG,SAAdA,WAAc,CAAC7C,GAAD;AAAA,WAAsC,UAACU,CAAD;;;AACxDA,MAAAA,CAAC,CAACoC,eAAF;AACA,UAAMxD,IAAI,mBAAGU,GAAG,CAACW,OAAP,iDAAG,aAAarB,IAA1B;;AACA,UAAI,CAAC8B,aAAa,CAACT,OAAd,CAAsBoC,GAAtB,CAA0B/C,GAAG,CAACW,OAA9B,CAAL,EAA6C;AAC3CS,QAAAA,aAAa,CAACT,OAAd,CAAsBgC,GAAtB,CAA0B3C,GAAG,CAACW,OAA9B,EAAuC,IAAvC;AACD;;AACD,UAAI,CAACW,aAAa,CAACX,OAAf,KAA0BI,MAA1B,aAA0BA,MAA1B,uBAA0BA,MAAM,CAAEiC,oBAAlC,CAAJ,EAA4D;AAC5D,UAAMlD,CAAC,GAAGkB,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqB9C,IAArB,CAAV;AACA2C,MAAAA,eAAe,CAACnC,CAAD,CAAf;AACD,KATmB;AAAA,GAApB;;AAWA,MAAMmD,YAAY,GAAG,SAAfA,YAAe,CAACjD,GAAD;AAAA,WAAsC,UAACU,CAAD;;;AACzDA,MAAAA,CAAC,CAACoC,eAAF;AACA,UAAI,CAACxB,aAAa,CAACX,OAAf,KAA0BI,MAA1B,aAA0BA,MAA1B,uBAA0BA,MAAM,CAAEiC,oBAAlC,CAAJ,EAA4D;AAC5D,UAAM1D,IAAI,oBAAGU,GAAG,CAACW,OAAP,kDAAG,cAAarB,IAA1B;AACA,UAAMQ,CAAC,GAAGE,GAAG,CAACW,OAAJ,IAAeK,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqB9C,IAArB,CAAzB;AACA2C,MAAAA,eAAe,CAACnC,CAAD,CAAf;AACD,KANoB;AAAA,GAArB;;AAQA,MAAMoD,KAAK,GAAG,SAARA,KAAQ,CAAChB,IAAD,EAAyB3C,KAAzB;;;AACZ,QAAI,CAAC2C,IAAL,EAAW;AAEX,QAAMlC,GAAG,GAAGmD,eAAS,EAArB;AACEnD,IAAAA,GAAgD,CAACW,OAAjD,GAA2DuB,IAA3D;AACF,QAAM5C,IAAI,GAAGS,gBAAgB,CAACC,GAAG,CAACW,OAAL,CAA7B;AACA,QAAI,CAACrB,IAAL,EAAW;AACX,QAAM8D,iBAAiB,GAAGjD,OAAO,CAACH,GAAG,CAACW,OAAL,CAAP,IAAyBN,UAAU,CAACL,GAAG,CAACW,OAAL,CAA7D;AACA,QAAMD,CAAC,GAAGM,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqB9C,IAArB,CAAV;;AAEA,QACE,CAAC0B,QAAQ,CAACL,OAAT,CAAiBoC,GAAjB,CAAqBzD,IAArB,CAAD,IACA,EAAE,CAAAoB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEgC,KAAH,KAAYhC,CAAC,CAACgC,KAAF,CAAQW,IAAR,CAAa,UAACnB,IAAD;AAAA,aAAUA,IAAI,CAACvB,OAAL,KAAiBX,GAAG,CAACW,OAA/B;AAAA,KAAb,CAAd,CAFF,EAGE;AACA,UAAIR,OAAO,CAACH,GAAG,CAACW,OAAL,CAAP,IAAyBN,UAAU,CAACL,GAAG,CAACW,OAAL,CAAvC,EAAuD;AACrDX,QAAAA,GAAG,CAACW,OAAJ,IAAeX,GAAG,CAACW,OAAJ,CAAY2C,gBAAZ,CAA6B,QAA7B,EAAuCL,YAAY,CAACjD,GAAD,CAAnD,CAAf;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,CAACW,OAAJ,IAAeX,GAAG,CAACW,OAAJ,CAAY2C,gBAAZ,CAA6B,OAA7B,EAAsCC,WAAW,CAACvD,GAAD,CAAjD,CAAf;AACAA,QAAAA,GAAG,CAACW,OAAJ,IAAeX,GAAG,CAACW,OAAJ,CAAY2C,gBAAZ,CAA6B,OAA7B,EAAsCT,WAAW,CAAC7C,GAAD,CAAjD,CAAf;AACD;AACF;;AAED,QAAMsC,UAAU,GAAG3C,aAAa,CAC9BoB,MAD8B,aAC9BA,MAD8B,uBAC9BA,MAAM,CAAEvB,gBADsB,EAE9BH,iBAF8B,EAG9BE,KAH8B,CAAhC;;AAMA,QAAMiE,UAAU,GAAcxC,QAAQ,CAACL,OAAT,CAAiByB,GAAjB,CAAqB9C,IAArB;AAC5BsD,MAAAA,KAAK,EAAE;AADqB,OAExBrD,KAAK,IAAI;AAAE8C,MAAAA,UAAU,EAAE9C;AAAd,KAFe,EAGxB+C,UAAU,IAAI;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KAHU;AAI5BlC,MAAAA,IAAI,mBAAEJ,GAAG,CAACW,OAAN,kDAAE,cAAaP,IAJS;AAK5Bd,MAAAA,IAAI,EAAEA;AALsB,OAMxB8D,iBAAiB,IAAI;AAAExC,MAAAA,OAAO,EAAE;AAAX,KANG,EAOxBwC,iBAAiB,IAAI;AAAEV,MAAAA,KAAK,EAAE;AAAT,KAPG;AAQ5B1C,MAAAA,GAAG,EAAHA;AAR4B,MAA9B;;AAUA,QAAIgB,QAAQ,CAACL,OAAT,CAAiBoC,GAAjB,CAAqBzD,IAArB,CAAJ,EAAgC;AAC9B,UAAIkE,UAAU,CAACxD,GAAX,IAAkBwD,UAAU,CAACd,KAAjC,EAAwC;AACtCc,QAAAA,UAAU,CAACd,KAAX,CAAiBe,IAAjB,CAAsBD,UAAU,CAACxD,GAAjC;AACD;;AACD,UACEwD,UAAU,CAACd,KAAX,IAEA,CAACc,UAAU,CAACd,KAAX,CAAiBW,IAAjB,CAAsB,UAACnB,IAAD;AAAA,eAAUA,IAAI,CAACvB,OAAL,KAAiBX,GAAG,CAACW,OAA/B;AAAA,OAAtB,CAHH,EAIE;AACA6C,QAAAA,UAAU,CAACd,KAAX,CAAiBe,IAAjB,CAAsBzD,GAAtB;AACA,eAAOwD,UAAU,CAACxD,GAAlB;AACD;AACF;;AACDgB,IAAAA,QAAQ,CAACL,OAAT,CAAiBgC,GAAjB,CAAqBrD,IAArB,EAA2BkE,UAA3B;AACD,GApDD;;AAsDA,MAAMD,WAAW,GAAG,SAAdA,WAAc,CAACvD,GAAD;AAAA,WAAsC;AACxDmB,MAAAA,eAAe,CAACR,OAAhB,CAAwBgC,GAAxB,CAA4B3C,GAA5B,EAAiC,IAAjC;AACAA,MAAAA,GAAG,CAACW,OAAJ,IACEX,GAAG,CAACW,OAAJ,CAAY+C,mBAAZ,CAAgC,OAAhC,EAAyCH,WAAW,CAACvD,GAAD,CAApD,EAA2D,IAA3D,CADF;AAED,KAJmB;AAAA,GAApB;;AAMA,SAAO;AACLkD,IAAAA,KAAK,EAAEA,KADF;AAELvB,IAAAA,UAAU,EAAEA,UAFP;AAGLN,IAAAA,MAAM,EAAEA,MAAM,CAACV,OAHV;AAILY,IAAAA,YAAY,EAAEA,YAAY,CAACZ;AAJtB,GAAP;AAMD,CAjLM;;;;"}