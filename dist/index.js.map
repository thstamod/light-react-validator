{"version":3,"file":"index.js","sources":["../src/utils/builtIns.ts","../src/logic/checkValidators.ts","../src/logic/checkers.ts","../src/logic/genericFunctions.ts","../src/index.ts"],"sourcesContent":["export default {\n  require: (input: string): boolean => input.trim().length > 0,\n  email: (input: string): boolean =>\n    /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(input),\n  minLen: (input: string, len: number): boolean => input.toString().length < len\n}\n","import { Config } from '../types/configuration'\nimport { Rules } from '../types/fields'\n\nconst checkForValidators = (\n  configValidators: Config | null,\n  builtInValidators: any,\n  name: string,\n  data?: Rules\n) => {\n  if (data?.customValidators?.[name]) {\n    return data.customValidators[name]\n  }\n  if (configValidators?.[name]) {\n    return configValidators[name]\n  }\n  if (builtInValidators[name]) {\n    return builtInValidators[name]\n  } else {\n    throw new Error(`no validation function with mane ${name}`)\n  }\n}\n\nexport const getValidators = (\n  configValidators: Config | null,\n  builtInValidators: object,\n  data?: Rules\n) => {\n  if (!data) return\n  const f = {}\n  for (const key in data?.rules) {\n    const t = checkForValidators(configValidators, builtInValidators, key, data)\n    if (t) {\n      f[key] = t\n    }\n  }\n  return f\n}\n","// import { RefObject } from 'react'\nimport { BasicRefs } from '../types/fields'\n\nexport const hasNameAttribute = (ref: BasicRefs) => {\n  const name = ref.name\n  if (name) {\n    return name\n  } else {\n    throw new Error(\n      `the field ${ref.outerHTML} must have a unique name attribute`\n    )\n  }\n}\n","export const isEmpty = (o: object): boolean => {\n  if (Array.isArray(o)) {\n    return !o.length\n  }\n  return Object.keys(o).length === 0 && o.constructor === Object\n}\n","import { useRef, useState, useEffect, createRef, RefObject } from 'react'\nimport builtInValidators from './utils/builtIns'\nimport { Config, UseValidator } from './types/configuration'\nimport { DataField, BasicRefs, Rules } from './types/fields'\nimport { getValidators } from './logic/checkValidators'\nimport { hasNameAttribute } from './logic/checkers'\nimport { isEmpty } from './logic/genericFunctions'\n\nexport const useValidator = (config?: Config): UseValidator => {\n  const elements = useRef(new Map())\n  const touchedElements = useRef(new Map())\n  const dirtyElements = useRef(new Map())\n  const errors = useRef({})\n  const customValidators = useRef(null)\n  const customConfiguration = useRef<any>({})\n  const formValidity = useRef(true)\n  const shouldRerender = useRef(false)\n  const [, rerender] = useState()\n\n  const submitForm = (fn: Function) => (e: Event) => {\n    e.preventDefault()\n    const prevFormValidity = formValidity.current\n    if (elements.current.size !== dirtyElements.current.size) {\n      dirtyElements.current = new Map(elements.current)\n    }\n    elements.current.forEach((_value: object, key: BasicRefs) => {\n      fieldValidation(key)\n    })\n    if (formValidity.current !== prevFormValidity) {\n      rerender({})\n      return\n    }\n    fn()\n  }\n\n  useEffect(() => {\n    if (config?.customValidators) {\n      customValidators.current = config.customValidators\n    }\n    if (config?.validateFormOnSubmit) {\n      customConfiguration.current.validateFormOnSubmit = true\n    }\n  }, [])\n\n  const fieldValidation = (ref: BasicRefs): void => {\n    const name = hasNameAttribute(ref)\n    const { fieldRules, validators } = elements.current.get(ref)\n    const { rules, messages } = fieldRules\n    for (const key in validators) {\n      const validator = validators[key]\n      if (rules[key] && !validator(ref?.value)) {\n        if (errors.current?.[name]?.[key]) continue\n        shouldRerender.current = true\n        if (name in errors.current) {\n          errors.current[name][key] = messages?.[key]\n        } else {\n          errors.current[name] = {\n            [key]: messages?.[key],\n            ...errors.current[name]\n          }\n        }\n        elements.current.set(ref, {\n          ...elements.current.get(ref),\n          valid: false\n        })\n      } else {\n        if (!errors.current?.[name]?.[key]) continue\n        shouldRerender.current = true\n        delete errors.current?.[name]?.[key]\n        if (!isEmpty(errors?.current) && isEmpty(errors?.current?.[name])) {\n          isEmpty(errors.current?.[name]) && delete errors.current?.[name]\n          errors.current = { ...errors.current }\n          elements.current.set(ref, {\n            ...elements.current.get(ref),\n            valid: true\n          })\n        }\n      }\n    }\n    if (\n      !elements.current.get(ref).valid &&\n      formValidity &&\n      !customConfiguration.current.validateFormOnSubmit\n    ) {\n      formValidity.current = false\n    }\n\n    if (shouldRerender.current) {\n      shouldRerender.current = false\n      rerender({})\n    }\n  }\n\n  const detectInput = (ref: RefObject<BasicRefs>) => (e: Event) => {\n    e.stopPropagation()\n    //  const prev = formValidity.current\n    if (!dirtyElements.current.has(ref.current)) {\n      dirtyElements.current.set(ref.current, null)\n      // return\n    }\n    fieldValidation(ref.current!)\n    // // TODO: not working correctly. updates on every change\n    // if (!formValidity.current && !prev) {\n    //   formValidity.current = true\n    //  rerender({})\n    // }\n  }\n\n  const track = (elem?: BasicRefs, rules?: Rules): void => {\n    if (!elem) return\n    const ref = createRef<BasicRefs>()\n    ;(ref as React.MutableRefObject<BasicRefs>).current = elem\n    if (elements.current.has(ref.current)) return\n    ref.current && ref.current.addEventListener('focus', detectTouch(ref))\n    ref.current && ref.current.addEventListener('input', detectInput(ref))\n\n    const validators = getValidators(\n      customValidators.current,\n      builtInValidators,\n      rules\n    )\n\n    const dataFields: DataField = {\n      valid: true,\n      ...(rules && { fieldRules: rules }),\n      ...(validators && { validators })\n    }\n    elements.current.set(ref.current, dataFields)\n  }\n\n  const detectTouch = (ref: RefObject<BasicRefs>) => () => {\n    touchedElements.current.set(ref, null)\n    ref.current &&\n      ref.current.removeEventListener('focus', detectTouch(ref), true)\n  }\n\n  return {\n    track: track,\n    submitForm: submitForm,\n    errors: errors.current,\n    formValidity: formValidity.current\n  }\n}\n"],"names":["require","input","trim","length","email","test","minLen","len","toString","checkForValidators","configValidators","builtInValidators","name","data","customValidators","Error","getValidators","f","key","rules","t","hasNameAttribute","ref","outerHTML","isEmpty","o","Array","isArray","Object","keys","constructor","useValidator","config","elements","useRef","Map","touchedElements","dirtyElements","errors","customConfiguration","formValidity","shouldRerender","useState","rerender","submitForm","fn","e","preventDefault","prevFormValidity","current","size","forEach","_value","fieldValidation","useEffect","validateFormOnSubmit","get","fieldRules","validators","messages","validator","value","set","valid","detectInput","stopPropagation","has","track","elem","createRef","addEventListener","detectTouch","dataFields","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,wBAAe;AACbA,EAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,WAA4BA,KAAK,CAACC,IAAN,GAAaC,MAAb,GAAsB,CAAlD;AAAA,GADI;AAEbC,EAAAA,KAAK,EAAE,eAACH,KAAD;AAAA,WACL,4CAA4CI,IAA5C,CAAiDJ,KAAjD,CADK;AAAA,GAFM;AAIbK,EAAAA,MAAM,EAAE,gBAACL,KAAD,EAAgBM,GAAhB;AAAA,WAAyCN,KAAK,CAACO,QAAN,GAAiBL,MAAjB,GAA0BI,GAAnE;AAAA;AAJK,CAAf;;ACGA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,gBADyB,EAEzBC,iBAFyB,EAGzBC,IAHyB,EAIzBC,IAJyB;;;AAMzB,MAAIA,IAAJ,aAAIA,IAAJ,gDAAIA,IAAI,CAAEC,gBAAV,0DAAI,sBAAyBF,IAAzB,CAAJ,EAAoC;AAClC,WAAOC,IAAI,CAACC,gBAAL,CAAsBF,IAAtB,CAAP;AACD;;AACD,MAAIF,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAGE,IAAH,CAApB,EAA8B;AAC5B,WAAOF,gBAAgB,CAACE,IAAD,CAAvB;AACD;;AACD,MAAID,iBAAiB,CAACC,IAAD,CAArB,EAA6B;AAC3B,WAAOD,iBAAiB,CAACC,IAAD,CAAxB;AACD,GAFD,MAEO;AACL,UAAM,IAAIG,KAAJ,uCAA8CH,IAA9C,CAAN;AACD;AACF,CAjBD;;AAmBA,AAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAC3BN,gBAD2B,EAE3BC,iBAF2B,EAG3BE,IAH2B;AAK3B,MAAI,CAACA,IAAL,EAAW;AACX,MAAMI,CAAC,GAAG,EAAV;;AACA,OAAK,IAAMC,GAAX,IAAkBL,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEM,KAAxB,EAA+B;AAC7B,QAAMC,CAAC,GAAGX,kBAAkB,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCO,GAAtC,EAA2CL,IAA3C,CAA5B;;AACA,QAAIO,CAAJ,EAAO;AACLH,MAAAA,CAAC,CAACC,GAAD,CAAD,GAASE,CAAT;AACD;AACF;;AACD,SAAOH,CAAP;AACD,CAdM;;ACnBA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD;AAC9B,MAAMV,IAAI,GAAGU,GAAG,CAACV,IAAjB;;AACA,MAAIA,IAAJ,EAAU;AACR,WAAOA,IAAP;AACD,GAFD,MAEO;AACL,UAAM,IAAIG,KAAJ,gBACSO,GAAG,CAACC,SADb,wCAAN;AAGD;AACF,CATM;;ACHA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD;AACrB,MAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AACpB,WAAO,CAACA,CAAC,CAACtB,MAAV;AACD;;AACD,SAAOyB,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAetB,MAAf,KAA0B,CAA1B,IAA+BsB,CAAC,CAACK,WAAF,KAAkBF,MAAxD;AACD,CALM;;ICQMG,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAC1B,MAAMC,QAAQ,GAAGC,YAAM,CAAC,IAAIC,GAAJ,EAAD,CAAvB;AACA,MAAMC,eAAe,GAAGF,YAAM,CAAC,IAAIC,GAAJ,EAAD,CAA9B;AACA,MAAME,aAAa,GAAGH,YAAM,CAAC,IAAIC,GAAJ,EAAD,CAA5B;AACA,MAAMG,MAAM,GAAGJ,YAAM,CAAC,EAAD,CAArB;AACA,MAAMpB,gBAAgB,GAAGoB,YAAM,CAAC,IAAD,CAA/B;AACA,MAAMK,mBAAmB,GAAGL,YAAM,CAAM,EAAN,CAAlC;AACA,MAAMM,YAAY,GAAGN,YAAM,CAAC,IAAD,CAA3B;AACA,MAAMO,cAAc,GAAGP,YAAM,CAAC,KAAD,CAA7B;;kBACqBQ,cAAQ;MAApBC;;AAET,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,WAAkB,UAACC,CAAD;AACnCA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,gBAAgB,GAAGR,YAAY,CAACS,OAAtC;;AACA,UAAIhB,QAAQ,CAACgB,OAAT,CAAiBC,IAAjB,KAA0Bb,aAAa,CAACY,OAAd,CAAsBC,IAApD,EAA0D;AACxDb,QAAAA,aAAa,CAACY,OAAd,GAAwB,IAAId,GAAJ,CAAQF,QAAQ,CAACgB,OAAjB,CAAxB;AACD;;AACDhB,MAAAA,QAAQ,CAACgB,OAAT,CAAiBE,OAAjB,CAAyB,UAACC,MAAD,EAAiBlC,GAAjB;AACvBmC,QAAAA,eAAe,CAACnC,GAAD,CAAf;AACD,OAFD;;AAGA,UAAIsB,YAAY,CAACS,OAAb,KAAyBD,gBAA7B,EAA+C;AAC7CL,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACA;AACD;;AACDE,MAAAA,EAAE;AACH,KAdkB;AAAA,GAAnB;;AAgBAS,EAAAA,eAAS,CAAC;AACR,QAAItB,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAElB,gBAAZ,EAA8B;AAC5BA,MAAAA,gBAAgB,CAACmC,OAAjB,GAA2BjB,MAAM,CAAClB,gBAAlC;AACD;;AACD,QAAIkB,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEuB,oBAAZ,EAAkC;AAChChB,MAAAA,mBAAmB,CAACU,OAApB,CAA4BM,oBAA5B,GAAmD,IAAnD;AACD;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMF,eAAe,GAAG,SAAlBA,eAAkB,CAAC/B,GAAD;AACtB,QAAMV,IAAI,GAAGS,gBAAgB,CAACC,GAAD,CAA7B;;gCACmCW,QAAQ,CAACgB,OAAT,CAAiBO,GAAjB,CAAqBlC,GAArB;QAA3BmC,mCAAAA;QAAYC,mCAAAA;;QACZvC,QAAoBsC,WAApBtC;QAAOwC,WAAaF,WAAbE;;AACf,SAAK,IAAMzC,GAAX,IAAkBwC,UAAlB,EAA8B;AAC5B,UAAME,SAAS,GAAGF,UAAU,CAACxC,GAAD,CAA5B;;AACA,UAAIC,KAAK,CAACD,GAAD,CAAL,IAAc,CAAC0C,SAAS,CAACtC,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEuC,KAAN,CAA5B,EAA0C;AAAA;;AACxC,+BAAIvB,MAAM,CAACW,OAAX,4EAAI,gBAAiBrC,IAAjB,CAAJ,yDAAI,qBAAyBM,GAAzB,CAAJ,EAAmC;AACnCuB,QAAAA,cAAc,CAACQ,OAAf,GAAyB,IAAzB;;AACA,YAAIrC,IAAI,IAAI0B,MAAM,CAACW,OAAnB,EAA4B;AAC1BX,UAAAA,MAAM,CAACW,OAAP,CAAerC,IAAf,EAAqBM,GAArB,IAA4ByC,QAA5B,aAA4BA,QAA5B,uBAA4BA,QAAQ,CAAGzC,GAAH,CAApC;AACD,SAFD,MAEO;AAAA;;AACLoB,UAAAA,MAAM,CAACW,OAAP,CAAerC,IAAf,wCACGM,GADH,IACSyC,QADT,aACSA,QADT,uBACSA,QAAQ,CAAGzC,GAAH,CADjB,cAEKoB,MAAM,CAACW,OAAP,CAAerC,IAAf,CAFL;AAID;;AACDqB,QAAAA,QAAQ,CAACgB,OAAT,CAAiBa,GAAjB,CAAqBxC,GAArB,eACKW,QAAQ,CAACgB,OAAT,CAAiBO,GAAjB,CAAqBlC,GAArB,CADL;AAEEyC,UAAAA,KAAK,EAAE;AAFT;AAID,OAfD,MAeO;AAAA;;AACL,YAAI,sBAACzB,MAAM,CAACW,OAAR,8EAAC,iBAAiBrC,IAAjB,CAAD,0DAAC,sBAAyBM,GAAzB,CAAD,CAAJ,EAAoC;AACpCuB,QAAAA,cAAc,CAACQ,OAAf,GAAyB,IAAzB;AACA,4BAAOX,MAAM,CAACW,OAAd,4EAAO,iBAAiBrC,IAAjB,CAAP,+DAAO,sBAAyBM,GAAzB,CAAP;;AACA,YAAI,CAACM,OAAO,CAACc,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEW,OAAT,CAAR,IAA6BzB,OAAO,CAACc,MAAD,aAACA,MAAD,2CAACA,MAAM,CAAEW,OAAT,qDAAC,iBAAkBrC,IAAlB,CAAD,CAAxC,EAAmE;AAAA;;AACjEY,UAAAA,OAAO,qBAACc,MAAM,CAACW,OAAR,qDAAC,iBAAiBrC,IAAjB,CAAD,CAAP,yBAA0C0B,MAAM,CAACW,OAAjD,mDAAmC,OAAO,iBAAiBrC,IAAjB,CAA1C;AACA0B,UAAAA,MAAM,CAACW,OAAP,gBAAsBX,MAAM,CAACW,OAA7B;AACAhB,UAAAA,QAAQ,CAACgB,OAAT,CAAiBa,GAAjB,CAAqBxC,GAArB,eACKW,QAAQ,CAACgB,OAAT,CAAiBO,GAAjB,CAAqBlC,GAArB,CADL;AAEEyC,YAAAA,KAAK,EAAE;AAFT;AAID;AACF;AACF;;AACD,QACE,CAAC9B,QAAQ,CAACgB,OAAT,CAAiBO,GAAjB,CAAqBlC,GAArB,EAA0ByC,KAA3B,IACAvB,YADA,IAEA,CAACD,mBAAmB,CAACU,OAApB,CAA4BM,oBAH/B,EAIE;AACAf,MAAAA,YAAY,CAACS,OAAb,GAAuB,KAAvB;AACD;;AAED,QAAIR,cAAc,CAACQ,OAAnB,EAA4B;AAC1BR,MAAAA,cAAc,CAACQ,OAAf,GAAyB,KAAzB;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GA/CD;;AAiDA,MAAMqB,WAAW,GAAG,SAAdA,WAAc,CAAC1C,GAAD;AAAA,WAA+B,UAACwB,CAAD;AACjDA,MAAAA,CAAC,CAACmB,eAAF;;AAEA,UAAI,CAAC5B,aAAa,CAACY,OAAd,CAAsBiB,GAAtB,CAA0B5C,GAAG,CAAC2B,OAA9B,CAAL,EAA6C;AAC3CZ,QAAAA,aAAa,CAACY,OAAd,CAAsBa,GAAtB,CAA0BxC,GAAG,CAAC2B,OAA9B,EAAuC,IAAvC;AAED;;AACDI,MAAAA,eAAe,CAAC/B,GAAG,CAAC2B,OAAL,CAAf;AAMD,KAbmB;AAAA,GAApB;;AAeA,MAAMkB,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAmBjD,KAAnB;AACZ,QAAI,CAACiD,IAAL,EAAW;AACX,QAAM9C,GAAG,GAAG+C,eAAS,EAArB;AACE/C,IAAAA,GAAyC,CAAC2B,OAA1C,GAAoDmB,IAApD;AACF,QAAInC,QAAQ,CAACgB,OAAT,CAAiBiB,GAAjB,CAAqB5C,GAAG,CAAC2B,OAAzB,CAAJ,EAAuC;AACvC3B,IAAAA,GAAG,CAAC2B,OAAJ,IAAe3B,GAAG,CAAC2B,OAAJ,CAAYqB,gBAAZ,CAA6B,OAA7B,EAAsCC,WAAW,CAACjD,GAAD,CAAjD,CAAf;AACAA,IAAAA,GAAG,CAAC2B,OAAJ,IAAe3B,GAAG,CAAC2B,OAAJ,CAAYqB,gBAAZ,CAA6B,OAA7B,EAAsCN,WAAW,CAAC1C,GAAD,CAAjD,CAAf;AAEA,QAAMoC,UAAU,GAAG1C,aAAa,CAC9BF,gBAAgB,CAACmC,OADa,EAE9BtC,iBAF8B,EAG9BQ,KAH8B,CAAhC;;AAMA,QAAMqD,UAAU;AACdT,MAAAA,KAAK,EAAE;AADO,OAEV5C,KAAK,IAAI;AAAEsC,MAAAA,UAAU,EAAEtC;AAAd,KAFC,EAGVuC,UAAU,IAAI;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KAHJ,CAAhB;;AAKAzB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBa,GAAjB,CAAqBxC,GAAG,CAAC2B,OAAzB,EAAkCuB,UAAlC;AACD,GApBD;;AAsBA,MAAMD,WAAW,GAAG,SAAdA,WAAc,CAACjD,GAAD;AAAA,WAA+B;AACjDc,MAAAA,eAAe,CAACa,OAAhB,CAAwBa,GAAxB,CAA4BxC,GAA5B,EAAiC,IAAjC;AACAA,MAAAA,GAAG,CAAC2B,OAAJ,IACE3B,GAAG,CAAC2B,OAAJ,CAAYwB,mBAAZ,CAAgC,OAAhC,EAAyCF,WAAW,CAACjD,GAAD,CAApD,EAA2D,IAA3D,CADF;AAED,KAJmB;AAAA,GAApB;;AAMA,SAAO;AACL6C,IAAAA,KAAK,EAAEA,KADF;AAELvB,IAAAA,UAAU,EAAEA,UAFP;AAGLN,IAAAA,MAAM,EAAEA,MAAM,CAACW,OAHV;AAILT,IAAAA,YAAY,EAAEA,YAAY,CAACS;AAJtB,GAAP;AAMD,CAtIM;;;;"}